#!/usr/bin/python
from matplotlib import pyplot as plt
import numpy as np
from itertools import cycle
cycol = cycle('bgrcmk').next
plt.style.use('ggplot')

# evenly sampled time at 200ms intervals
p0 = [0.0050945,0.0209223,0.0442094,0.0787929,0.122878,0.194524,0.243062,0.370851,0.456705,0.495709]
p1 = [0.0005122,0.0010501,0.0015936,0.0022705,0.0027632,0.003654,0.0040101,0.0049774,0.0057341,0.0066838]
p2 = [0.0004475,0.0009624,0.0014365,0.0020136,0.0025683,0.0031901,0.0036861,0.0047774,0.0050082,0.0058983]
p3 = [0.0004601,0.0009442,0.0014399,0.0019756,0.002525,0.0030797,0.0037071,0.0046712,0.0050285,0.0058715]
p4 = [0.0004654,0.0009671,0.0015374,0.0021375,0.0026237,0.0033218,0.0037408,0.0049915,0.00545,0.0059772]
p5 = [0.0005084,0.0010554,0.0016722,0.0022956,0.0029194,0.0035787,0.0043153,0.0052267,0.0057715,0.0064611]
p6 = [0.0006033,0.0011701,0.0017901,0.002396,0.0030425,0.0038946,0.0044288,0.0059637,0.0061845,0.0064696]
p7 = [0.0006273,0.0012265,0.0019422,0.0026647,0.0034506,0.0047031,0.0054846,0.0068912,0.0073762,0.0082228]
p8 = [0.0007356,0.0017661,0.0032512,0.0051773,0.007718,0.0109339,0.0149817,0.021119,0.0244253,0.0293042]
p9 = [0.0017047,0.0066094,0.0145426,0.0293932,0.0505787,0.0837193,0.10293,0.149993,0.183826,0.223511]
p10 = [0.0059702,0.0241203,0.0497761,0.0948325,0.144304,0.21622,0.287042,0.403388,0.526319,0.619431]
pTeorical = [0.003,0.006602059991,0.01043136376,0.01440823997,0.01849485002,0.0226689075,0.02691568628,0.0312247199,0.03558818258,0.04]


n = ['1000','2000','3000','4000','5000','6000','7000','8000','9000','10000']
p = ['0','0.1','0.2','0.3','0.4','0.5','0.6','0.7','0.8','0.9','1']

# red dashes, blue squares and green triangles
plt.xticks(range(len(n)),n)
# plt.plot(p0, c=cycol(),label="p=0")
# plt.plot(p1, c=cycol(),label="p=0.1")
plt.plot(p2, c=cycol(),label="p=0.2")
plt.plot(p3, c=cycol(),label="p=0.3")
plt.plot(p4, c=cycol(),label="p=0.4")
plt.plot(p5, c=cycol(),label="p=0.5")
plt.plot(p6, c=cycol(),label="p=0.6")
plt.plot(p7, c=cycol(),label="p=0.7")
# plt.plot(p8, c=cycol(),label="p=0.8")
# plt.plot(p9, c=cycol(),label="p=0.9")
# plt.plot(p10, c=cycol(),label="p=1")
plt.plot(pTeorical, c=cycol(),label="n*log n",linewidth=2,marker='*')
plt.yscale('log')

plt.xlabel("Size of the generated skip list")
plt.ylabel("Seconds (s)\nLogarithmic scale")
plt.legend(loc=2,fontsize=10)
# plt.show()
plt.savefig('time_teorical.png')

