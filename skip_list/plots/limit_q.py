#!/usr/bin/python
from matplotlib import pyplot as plt
import numpy as np
from itertools import cycle
cycol = cycle('bgrcmk').next
plt.style.use('ggplot')

# evenly sampled time at 200ms intervals
n = [0.0166298,0.0118932,0.0089784,0.0084212,0.0079394,0.0077772,0.00782,0.0068978,0.0070232,0.006728,0.0063978,0.0060604,0.0064436,0.00593,0.005677,0.0066154,0.0057204,0.0062556,0.0061946,0.0065574,0.0057198,0.0055614,0.0053086,0.0053162,0.0053858,0.0053768,0.005516,0.0052734,0.0053756,0.0053938,0.0054594,0.0054512,0.005343,0.0070876,0.0056166,0.0058736,0.0057136,0.0073004,0.0062126,0.0063294,0.0058562,0.0057912,0.0062488,0.0059898,0.0065266,0.0062534,0.0057922,0.0060182,0.0068146,0.0062584,0.0062914,0.0061362,0.0069534,0.0063318,0.0071064,0.0070926,0.0073832,0.0071272,0.007347,0.0064266,0.0065486,0.0063544,0.0064686,0.0066108,0.0070344,0.006908,0.0070362,0.0074136,0.0075918,0.0081192,0.0085296,0.0095468,0.010782,0.010957,0.0123012,0.014502,0.0183348,0.0221926,0.023949,0.0293008,0.0343604,0.04303,0.0516156,0.0648716,0.078224,0.10607,0.135642,0.170448,0.194034,0.230511,0.289778,0.304738,0.353653,0.388466,0.448789,0.497907,0.518105,0.565142,0.655649]
n2 = [0.109026,0.0752704,0.0596018,0.045821,0.048547,0.045832,0.0459962,0.0353212,0.0356302,0.0321858,0.0336178,0.0357854,0.0357344,0.034256,0.0317888,0.0311048,0.0316448,0.0296352,0.0300412,0.0303224,0.0307452,0.0333816,0.0294578,0.03253,0.0284342,0.0305864,0.029356,0.0314688,0.0310462,0.0300504,0.0329966,0.0319368,0.0303264,0.0323016,0.0344884,0.030718,0.0306152,0.031899,0.0310784,0.0307504,0.03089,0.0302602,0.0314646,0.0325812,0.0310718,0.0314548,0.0326732,0.0319192,0.032086,0.0332564,0.0329744,0.033146,0.0321742,0.0328132,0.0326904,0.0363264,0.0348168,0.0348926,0.0376204,0.036243,0.0407194,0.0427136,0.0469264,0.048759,0.0519468,0.0572618,0.0608506,0.0687904,0.0830104,0.0997084,0.129505,0.151082,0.183406,0.219327,0.282528,0.350897,0.446498,0.635,0.871915,1.07005,1.34001,1.68179,2.1809,2.5966,2.94285,3.5786,4.14233,4.98924,6.77355,9.2704,13.0372,16.3534,20.3229,19.8575,24.2357,26.9813,28.7664,29.6211,29.5853]
teorical = [21.7147241,12.78111093,9.505998278,7.766686682,6.676164014,5.924007671,5.37206369,4.949066887,4.614353028,4.342944819,4.118612066,3.930329033,3.770330929,3.632984302,3.514098591,3.410489587,3.319693122,3.23977178,3.169181065,3.106674673,3.051236108,3.00202846,2.958356927,2.91964047,2.885390082,2.855191958,2.828694304,2.805596914,2.785642861,2.768611817,2.754314657,2.74258906,2.733295922,2.726316398,2.72154948,2.718909985,2.718326903,2.719742034,2.723108867,2.72839167,2.735564754,2.7446119,2.755525909,2.768308295,2.782969072,2.799526654,2.818007857,2.838447995,2.860891074,2.885390082,2.912007388,2.940815243,2.971896401,3.005344868,3.041266793,3.079781518,3.121022809,3.165140292,3.212301131,3.262691982,3.316521265,3.374021826,3.435454042,3.501109467,3.571315113,3.646438507,3.726893684,3.813148306,3.905732183,4.005247503,4.11238119,4.227919921,4.35276849,4.487972418,4.634745996,4.794507349,4.968922659,5.159962441,5.369973926,5.601775147,5.858778754,6.1451571,6.466065607,6.827949889,7.238975742,7.709643408,8.253685367,8.889413014,9.641797907,10.54580176,11.65192643,13.03592645,14.81684651,17.1930965,20.52181657,25.51728986,33.84618052,50.50848618,100.5042045]
p0 = [0.0050945,0.0209223,0.0442094,0.0787929,0.122878,0.194524,0.243062,0.370851,0.456705,0.495709]
p1 = [0.0005122,0.0010501,0.0015936,0.0022705,0.0027632,0.003654,0.0040101,0.0049774,0.0057341,0.0066838]
p2 = [0.0004475,0.0009624,0.0014365,0.0020136,0.0025683,0.0031901,0.0036861,0.0047774,0.0050082,0.0058983]
p3 = [0.0004601,0.0009442,0.0014399,0.0019756,0.002525,0.0030797,0.0037071,0.0046712,0.0050285,0.0058715]
p4 = [0.0004654,0.0009671,0.0015374,0.0021375,0.0026237,0.0033218,0.0037408,0.0049915,0.00545,0.0059772]
p5 = [0.0005084,0.0010554,0.0016722,0.0022956,0.0029194,0.0035787,0.0043153,0.0052267,0.0057715,0.0064611]
p6 = [0.0006033,0.0011701,0.0017901,0.002396,0.0030425,0.0038946,0.0044288,0.0059637,0.0061845,0.0064696]
p7 = [0.0006273,0.0012265,0.0019422,0.0026647,0.0034506,0.0047031,0.0054846,0.0068912,0.0073762,0.0082228]
p8 = [0.0007356,0.0017661,0.0032512,0.0051773,0.007718,0.0109339,0.0149817,0.021119,0.0244253,0.0293042]
p9 = [0.0017047,0.0066094,0.0145426,0.0293932,0.0505787,0.0837193,0.10293,0.149993,0.183826,0.223511]
p10 = [0.0059702,0.0241203,0.0497761,0.0948325,0.144304,0.21622,0.287042,0.403388,0.526319,0.619431]
pTeorical = [0.003,0.006602059991,0.01043136376,0.01440823997,0.01849485002,0.0226689075,0.02691568628,0.0312247199,0.03558818258,0.04]

p = ['0.01','0.02','0.03','0.04','0.05','0.06','0.07','0.08','0.09','0.1','0.11','0.12','0.13','0.14','0.15','0.16','0.17','0.18','0.19','0.2','0.21','0.22','0.23','0.24','0.25','0.26','0.27','0.28','0.29','0.3','0.31','0.32','0.33','0.34','0.35','0.36','0.37','0.38','0.39','0.4','0.41','0.42','0.43','0.44','0.45','0.46','0.47','0.48','0.49','0.5','0.51','0.52','0.53','0.54','0.55','0.56','0.57','0.58','0.59','0.6','0.61','0.62','0.63','0.64','0.65','0.66','0.67','0.68','0.69','0.7','0.71','0.72','0.73','0.74','0.75','0.76','0.77','0.78','0.79','0.8','0.81','0.82','0.83','0.84','0.85','0.86','0.87','0.88','0.89','0.9','0.91','0.92','0.93','0.94','0.95','0.96','0.97','0.98','0.99']
# p = ['0','0.1','0.2','0.3','0.4','0.5','0.6','0.7','0.8','0.9','1']

min = n[0]
pos_m = 0
for i in range(len(n)):
    if ( n[i] < min ):
        min = n[i]
        pos_m = i

print min
print pos_m
print p[pos_m]
min = teorical[0]
pos_m = 0
for i in range(len(n2)):
    if ( teorical[i] < min ):
        min = teorical[i]
        pos_m = i

print min
print pos_m
print p[pos_m]

ticks = []
for i in range(len(p)):
    if i % 4 == 0:
        ticks.append(p[i])
    else:
        ticks.append("")

print ticks
# red dashes, blue squares and green triangles
plt.xticks(range(len(ticks)),ticks, rotation = 45, fontsize=8)
plt.plot(n, c=cycol(),label="n = 10000")
plt.plot(n2, c=cycol(),label="n = 50000")
plt.plot(teorical, c=cycol(),label="-1/(q ln q)")
# plt.vlines(0.369,0,100, color=cycol(), label="1/e")
plt.yscale('log')

plt.xlabel("Probability p of the generated skip list")
plt.ylabel("Seconds (s)\nLogarithmic scale")
plt.legend(loc=2,fontsize=10)
# plt.show()
plt.savefig('limit_q.png')

